import com.google.auth.oauth2.GoogleCredentials
import com.google.firebase.FirebaseApp
import com.google.firebase.FirebaseOptions
import com.google.firebase.cloud.StorageClient

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.leroymerlin.pandalab"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0-SNAPSHOT"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.google.firebase:firebase-core:17.2.0'
    implementation 'com.google.firebase:firebase-messaging:20.0.0'
    implementation 'com.google.firebase:firebase-auth:19.0.0'
    implementation 'com.google.firebase:firebase-firestore:21.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'com.github.FrangSierra:RxFirebase:1.5.6'
    implementation "androidx.cardview:cardview:1.0.0"
    implementation 'com.google.dagger:dagger-android:2.20'
    implementation 'com.google.dagger:dagger-android-support:2.20'
    // if you use the support libraries
    kapt 'com.google.dagger:dagger-android-processor:2.20'
    kapt 'com.google.dagger:dagger-compiler:2.20'

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
}

apply plugin: 'com.google.gms.google-services'

import com.google.auth.oauth2.GoogleCredentials
import com.google.firebase.cloud.StorageClient
import com.google.firebase.FirebaseApp
import com.google.firebase.FirebaseOptions
import groovy.json.JsonSlurper
import com.android.build.gradle.api.ApkVariantOutput

project.afterEvaluate {

    def debugVariant = android.applicationVariants.find { variant -> variant.name == "debug" && variant.outputs.first() instanceof ApkVariantOutput }

    task('uploadAgentApk', dependsOn: ["assembleDebug"]) {

    }.doLast {

        def serviceAccountFile = project.rootProject.file('../.config/firebase-adminsdk.json')
        FileInputStream serviceAccount =
                new FileInputStream(serviceAccountFile)

        def account = new JsonSlurper().parse(serviceAccountFile)

        def pid = account['project_id']?.toString() ?: ""
        def bucketUrl = "${pid}.appspot.com"
        def credentials = GoogleCredentials.fromStream(serviceAccount)
        FirebaseOptions options = new FirebaseOptions.Builder()
                .setCredentials(credentials)
                .setProjectId(pid)
                .setStorageBucket(bucketUrl)
                .build()

        try {
            FirebaseApp.initializeApp(options)
        } catch (e) {
            project.logger.debug("FirebaseApp already initialized", e)
        }

        project.logger.warn("uploaded file : ${debugVariant.outputs.first().outputFile}")
        StorageClient.getInstance().bucket()
                .create("config/android-agent.apk", debugVariant.outputs.first().outputFile.newInputStream())
    }
}
